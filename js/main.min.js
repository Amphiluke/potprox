!function(t){"use strict";let e=t.Chart,a=t.potprox,i={readFile:t=>new Promise((e,a)=>{let i=new FileReader;i.addEventListener("load",()=>e(i.result)),i.addEventListener("error",()=>a(i.error)),i.readAsText(t)})},r={parseCSV(t){let e=(t=t.trim()).includes(";")?";":",";","!==e&&(t=t.replace(/,/g,"."));let a=[];for(let i of t.split(/(?:\r?\n)+/)){let[t,r]=i.split(e).map(Number);a.push({x:t,y:r})}return a},winbondToCSV(t,e,a){let i=t.trim().split(/\r?\n/),r=e.trim().split(/\r?\n/),l=a.trim().split(/\r?\n/);if(i.length!==r.length||i.length!==l.length)throw new Error("Winbond files contain mismatched or corrupted data");let n=/\s+/;return i.map((t,e)=>{let a=t.trim().split(n),i=Number(a[0]),s=Number(a[1]);if(a=r[e].trim().split(n),Number(a[0])!==i)throw new Error("Winbond files contain mismatched or corrupted data");if(s+=Number(a[a.length-1]),a=l[e].trim().split(n),Number(a[0])!==i)throw new Error("Winbond files contain mismatched or corrupted data");return s+=Number(a[a.length-1]),`${i},${s.toFixed(8)}`}).join("\n")},toPotprox:t=>t.map(({x:t,y:e})=>({r:t,e:e})),approximate(t,e){let i=this.toPotprox(t),r=a[e].from(i);return r._rSqr=r.rSqr(i),r},makeCurveData:(t,e,a)=>[...t.points({start:e,end:a})].map(({r:t,e:e})=>({x:t,y:e}))},l={config:{type:"line",data:{datasets:[{borderColor:"transparent",fill:!1,pointBorderColor:"#f9df08"},{borderColor:"#039c35",fill:!1,pointRadius:0,pointHoverRadius:0}]},options:{animation:{duration:0},legend:{display:!1},scales:{xAxes:[{type:"linear",position:"bottom",gridLines:{color:"#014c1a",zeroLineColor:"#014c1a"},ticks:{fontColor:"#c9b405"}}],yAxes:[{gridLines:{color:"#014c1a",zeroLineColor:"#014c1a"},ticks:{fontColor:"#c9b405"}}]},tooltips:{enabled:!1}}},createChart(t,a,i){this.config.data.datasets[0].data=a,this.config.data.datasets[1].data=i,this.chart=new e(t,this.config)},update(t,e){this.chart.data.datasets[0].data=t,this.chart.data.datasets[1].data=e,this.chart.update()}};({ui:new Map([...document.body.querySelectorAll("[id]")].map(t=>["#"+t.id,t])),init(){this.addEventListeners(),this.updateChart()},updateChart(t){let e=this.ui,a=r.parseCSV(e.get("#data").value),i=e.get("#potential").value;this.potential=t||r.approximate(a,i);let n=a.map(({x:t})=>t),s=r.makeCurveData(this.potential,Math.min(...n),Math.max(...n));this.updateParamSlots(),l.chart?l.update(a,s):l.createChart(e.get("#graph").getContext("2d"),a,s)},updateParamSlots(){let t=this.potential,e=t?Object.assign({rSqr:t._rSqr},t.toJSON()):{},a=e.type?`[data-potential="${e.type}"]`:"[data-potential]";[...this.ui.get("#ctrl-form").querySelectorAll(`.result${a} input[name]`)].forEach(t=>t.value=e[t.name]||"")},addEventListener(t,e,a){let i="string"==typeof t?this.ui.get(t):t,r="string"==typeof a?this[a].bind(this):a;i.addEventListener(e,r,!1)},addEventListeners(){this.addEventListener("#file-tab-ctrl","click","clickTabCtrlHandler"),this.addEventListener("#file-csv","change","fileCSVChangeHandler"),this.addEventListener(this.ui.get("#file-tab-ctrl").querySelector(".tab-sheet[data-format='winbond']"),"change","fileWinbondChangeHandler"),this.addEventListener("#data","input","dataInputHandler"),this.addEventListener("#data","change","dataChangeHandler"),this.addEventListener("#potential","change","potentialChangeHandler"),this.addEventListener("#ctrl-form","submit","submitHandler"),this.addEventListener("#result-group","change","paramChangeHandler")},clickTabCtrlHandler({target:t}){if(!t.classList.contains("tab")||t.classList.contains("tab-active"))return;[...this.ui.get("#file-tab-ctrl").querySelectorAll(".tab")].forEach(e=>e.classList.toggle("tab-active",e===t));let e=t.dataset.format;[...this.ui.get("#file-tab-ctrl").querySelectorAll(".tab-sheet")].forEach(t=>t.classList.toggle("hidden",t.dataset.format!==e))},fileCSVChangeHandler({target:t}){let e=t.files[0];e&&(i.readFile(e).then(t=>this.ui.get("#data").value=t).catch(t=>console.error(t)),this.potential=null,this.updateParamSlots())},fileWinbondChangeHandler(){let t=this.ui,e=t.get("#file-kul").files[0],a=t.get("#file-sum1").files[0],l=t.get("#file-sum2").files[0];e&&a&&l&&(Promise.all([i.readFile(e),i.readFile(a),i.readFile(l)]).then(([t,e,a])=>this.ui.get("#data").value=r.winbondToCSV(t,e,a)).catch(t=>console.error(t)),this.potential=null,this.updateParamSlots())},dataInputHandler({target:t}){let e=t.value.trim();if(e.includes("\t")){let a=e.includes(",")?";":",";t.value=e.replace(/\t/g,a)}},dataChangeHandler(){this.potential=null,this.updateParamSlots()},potentialChangeHandler({target:t}){let e=t.value;[...this.ui.get("#ctrl-form").querySelectorAll("[data-potential]")].forEach(t=>t.classList.toggle("hidden",t.getAttribute("data-potential")!==e)),this.potential=null,this.updateParamSlots()},submitHandler(t){t.preventDefault(),this.updateChart(),this.ui.get("#result-group").classList.remove("user-modified")},paramChangeHandler({target:t}){if(!this.potential)return;this.ui.get("#result-group").classList.add("user-modified");let e=Number(t.value);e&&(this.potential[t.name]=e,this.potential._rSqr=void 0,this.updateChart(this.potential))}}).init()}(this);